name: build docker compose

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - uses: actions/checkout@v2

      - name: prepare
        env:
          PUBLIC_KEY: ${{secrets.PUBLIC_KEY}}
          PRIVATE_KEY: ${{secrets.PRIVATE_KEY}}
        run: |
          mkdir -p cache/composer
          make prepare

      - run: docker-compose pull

      - uses: whoan/docker-build-with-cache-action@v5
        with:
          registry: ghcr.io
          compose_file: docker-compose.yaml > docker/docker-compose.ci.yaml

      - name: cache composer registry
        uses: actions/cache@v2
        env:
          cache-name: composer-registry-v01
        with:
          path: ./cache/composer
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
            ${{ runner.os }}-

      - name: cache composer build
        uses: actions/cache@v2
        env:
          cache-name: composer-build-v01
        with:
          path: ./magento_ecommerce/vendor
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
            ${{ runner.os }}-

      - name: compose up
        run: docker-compose -f docker-compose.yaml -f docker/docker-compose.ci.yaml up -d

      - name: install magento
        run: docker exec 'phpfpm' sh /scripts/install.sh
